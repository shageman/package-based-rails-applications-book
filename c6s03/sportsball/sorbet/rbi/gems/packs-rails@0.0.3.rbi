# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `packs-rails` gem.
# Please instead update this file by running `bin/tapioca gem packs-rails`.

# source://packs-rails//lib/packs-rails.rb#6
module Packs
  class << self
    # source://packs/0.0.6/lib/packs.rb#16
    sig { returns(T::Array[::Packs::Pack]) }
    def all; end

    # source://packs/0.0.6/lib/packs.rb#34
    sig { void }
    def bust_cache!; end

    # source://packs/0.0.6/lib/packs.rb#41
    sig { returns(::Packs::Private::Configuration) }
    def config; end

    # source://packs/0.0.6/lib/packs.rb#47
    sig { params(blk: T.proc.params(arg0: ::Packs::Private::Configuration).void).void }
    def configure(&blk); end

    # source://packs/0.0.6/lib/packs.rb#21
    sig { params(name: ::String).returns(T.nilable(::Packs::Pack)) }
    def find(name); end

    # source://packs/0.0.6/lib/packs.rb#26
    sig { params(file_path: T.any(::Pathname, ::String)).returns(T.nilable(::Packs::Pack)) }
    def for_file(file_path); end

    private

    # source://packs/0.0.6/lib/packs.rb#73
    sig { returns(T::Array[::Pathname]) }
    def package_glob_patterns; end

    # source://packs/0.0.6/lib/packs.rb#59
    sig { returns(T::Hash[::String, ::Packs::Pack]) }
    def packs_by_name; end
  end
end

# source://packs-rails//lib/packs-rails.rb#7
module Packs::Rails
  extend ::ActiveSupport::Autoload

  class << self
    # Returns the value of attribute config.
    #
    # source://packs-rails//lib/packs-rails.rb#17
    def config; end

    # source://packs-rails//lib/packs-rails.rb#19
    def root; end
  end
end

# source://packs-rails//lib/packs-rails.rb#14
class Packs::Rails::Error < ::StandardError; end

# source://packs-rails//lib/packs/rails/integrations.rb#5
module Packs::Rails::Integrations; end

# source://packs-rails//lib/packs/rails/integrations/factory_bot.rb#6
class Packs::Rails::Integrations::FactoryBot
  # @return [FactoryBot] a new instance of FactoryBot
  #
  # source://packs-rails//lib/packs/rails/integrations/factory_bot.rb#7
  def initialize(app); end
end

# source://packs-rails//lib/packs/rails/integrations/rspec.rb#6
class Packs::Rails::Integrations::RSpec
  # @return [RSpec] a new instance of RSpec
  #
  # source://packs-rails//lib/packs/rails/integrations/rspec.rb#9
  def initialize; end

  # source://packs-rails//lib/packs/rails/integrations/rspec.rb#53
  sig { params(parent_pack: ::Packs::Pack).returns(T::Array[::Packs::Pack]) }
  def nested_packs_for(parent_pack); end
end

# source://packs-rails//lib/packs/rails/integrations/rails.rb#9
class Packs::Rails::Integrations::Rails
  # @return [Rails] a new instance of Rails
  #
  # source://packs-rails//lib/packs/rails/integrations/rails.rb#10
  def initialize(app); end

  # source://packs-rails//lib/packs/rails/integrations/rails.rb#19
  def create_engines; end

  # source://packs-rails//lib/packs/rails/integrations/rails.rb#27
  def inject_paths; end

  private

  # source://packs-rails//lib/packs/rails/integrations/rails.rb#48
  def create_engine(pack); end

  # source://packs-rails//lib/packs/rails/integrations/rails.rb#37
  def create_namespace(name); end
end

# source://packs-rails//lib/packs/rails/railtie.rb#5
class Packs::Rails::Railtie < ::Rails::Railtie; end

# source://packs-rails//lib/packs/rails/stim.rb#5
class Packs::Rails::Stim < ::Module
  # source://packs-rails//lib/packs/rails/stim.rb#9
  sig { params(pack: ::Packs::Pack, namespace: ::Module).void }
  def initialize(pack, namespace); end

  # source://packs-rails//lib/packs/rails/stim.rb#15
  def included(engine); end
end

# source://packs-rails//lib/packs/rails/stim.rb#35
module Packs::Rails::Stim::ClassMethods
  # source://packs-rails//lib/packs/rails/stim.rb#36
  def find_root(_from); end
end
