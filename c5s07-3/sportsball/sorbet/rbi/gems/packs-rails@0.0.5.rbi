# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `packs-rails` gem.
# Please instead update this file by running `bin/tapioca gem packs-rails`.


# source://packs-rails//lib/packs-rails.rb#6
module Packs
  class << self
    # source://packs/0.2.0/lib/packs.rb#146
    sig { params(pack_name: ::String, dependency_name: ::String).void }
    def add_dependency!(pack_name:, dependency_name:); end

    # source://packs-specification/0.0.10/lib/packs-specification.rb#19
    sig { returns(T::Array[::Packs::Pack]) }
    def all; end

    # source://packs/0.2.0/lib/packs.rb#261
    sig { void }
    def bust_cache!; end

    # source://packs/0.2.0/lib/packs.rb#52
    sig { params(files: T::Array[::String]).returns(T::Boolean) }
    def check(files); end

    # source://packs/0.2.0/lib/packs/configuration.rb#69
    sig { returns(::Packs::Configuration) }
    def config; end

    # source://packs/0.2.0/lib/packs/configuration.rb#76
    sig { params(blk: T.proc.params(arg0: ::Packs::Configuration).void).void }
    def configure(&blk); end

    # source://packs/0.2.0/lib/packs.rb#69
    sig do
      params(
        pack_name: ::String,
        enforce_privacy: T::Boolean,
        enforce_layers: T::Boolean,
        enforce_dependencies: T.nilable(T::Boolean),
        team: T.nilable(::CodeTeams::Team)
      ).void
    end
    def create_pack!(pack_name:, enforce_privacy: T.unsafe(nil), enforce_layers: T.unsafe(nil), enforce_dependencies: T.unsafe(nil), team: T.unsafe(nil)); end

    # source://packs-specification/0.0.10/lib/packs-specification.rb#24
    sig { params(name: ::String).returns(T.nilable(::Packs::Pack)) }
    def find(name); end

    # source://packs-specification/0.0.10/lib/packs-specification.rb#29
    sig { params(file_path: T.any(::Pathname, ::String)).returns(T.nilable(::Packs::Pack)) }
    def for_file(file_path); end

    # source://packs/0.2.0/lib/packs.rb#267
    sig { void }
    def lint_package_todo_yml_files!; end

    # source://packs/0.2.0/lib/packs.rb#272
    sig { params(packs: T::Array[::Packs::Pack]).void }
    def lint_package_yml_files!(packs); end

    # source://packs/0.2.0/lib/packs.rb#233
    sig { params(type: ::String, pack_name: T.nilable(::String), limit: ::Integer).void }
    def list_top_violations(type:, pack_name:, limit:); end

    # source://packs/0.2.0/lib/packs.rb#120
    sig do
      params(
        paths_relative_to_root: T::Array[::String],
        per_file_processors: T::Array[::Packs::PerFileProcessorInterface]
      ).void
    end
    def make_public!(paths_relative_to_root: T.unsafe(nil), per_file_processors: T.unsafe(nil)); end

    # source://packs/0.2.0/lib/packs.rb#203
    sig do
      params(
        pack_name: ::String,
        destination: ::String,
        per_file_processors: T::Array[::Packs::PerFileProcessorInterface]
      ).void
    end
    def move_to_folder!(pack_name:, destination:, per_file_processors: T.unsafe(nil)); end

    # source://packs/0.2.0/lib/packs.rb#92
    sig do
      params(
        pack_name: ::String,
        paths_relative_to_root: T::Array[::String],
        per_file_processors: T::Array[::Packs::PerFileProcessorInterface]
      ).void
    end
    def move_to_pack!(pack_name:, paths_relative_to_root: T.unsafe(nil), per_file_processors: T.unsafe(nil)); end

    # source://packs/0.2.0/lib/packs.rb#173
    sig do
      params(
        pack_name: ::String,
        parent_name: ::String,
        per_file_processors: T::Array[::Packs::PerFileProcessorInterface]
      ).void
    end
    def move_to_parent!(pack_name:, parent_name:, per_file_processors: T.unsafe(nil)); end

    # source://packs/0.2.0/lib/packs.rb#252
    sig { params(file: ::String, find: ::Pathname, replace_with: ::Pathname).void }
    def replace_in_file(file:, find:, replace_with:); end

    # source://packs/0.2.0/lib/packs.rb#29
    sig { void }
    def start_interactive_mode!; end

    # source://packs/0.2.0/lib/packs.rb#34
    sig { returns(T::Boolean) }
    def update; end

    # source://packs/0.2.0/lib/packs.rb#43
    sig { returns(T::Boolean) }
    def validate; end
  end
end

# source://packs-rails//lib/packs-rails.rb#7
module Packs::Rails
  extend ::ActiveSupport::Autoload

  class << self
    # Returns the value of attribute config.
    #
    # source://packs-rails//lib/packs-rails.rb#17
    def config; end

    # source://packs-rails//lib/packs-rails.rb#19
    def root; end
  end
end

# source://packs-rails//lib/packs-rails.rb#14
class Packs::Rails::Error < ::StandardError; end

# source://packs-rails//lib/packs/rails/integrations.rb#5
module Packs::Rails::Integrations; end

# source://packs-rails//lib/packs/rails/integrations/factory_bot.rb#6
class Packs::Rails::Integrations::FactoryBot
  # @return [FactoryBot] a new instance of FactoryBot
  #
  # source://packs-rails//lib/packs/rails/integrations/factory_bot.rb#7
  def initialize(app); end
end

# source://packs-rails//lib/packs/rails/integrations/rspec.rb#6
class Packs::Rails::Integrations::RSpec
  # @return [RSpec] a new instance of RSpec
  #
  # source://packs-rails//lib/packs/rails/integrations/rspec.rb#9
  def initialize; end

  # source://packs-rails//lib/packs/rails/integrations/rspec.rb#53
  sig { params(parent_pack: ::Packs::Pack).returns(T::Array[::Packs::Pack]) }
  def nested_packs_for(parent_pack); end
end

# source://packs-rails//lib/packs/rails/integrations/rails.rb#9
class Packs::Rails::Integrations::Rails
  # @return [Rails] a new instance of Rails
  #
  # source://packs-rails//lib/packs/rails/integrations/rails.rb#12
  def initialize(app); end

  # source://packs-rails//lib/packs/rails/integrations/rails.rb#21
  def create_engines; end

  # source://packs-rails//lib/packs/rails/integrations/rails.rb#29
  def inject_paths; end

  private

  # source://packs-rails//lib/packs/rails/integrations/rails.rb#59
  def create_engine(pack); end

  # source://packs-rails//lib/packs/rails/integrations/rails.rb#48
  def create_namespace(name); end

  # @return [Boolean]
  #
  # source://packs-rails//lib/packs/rails/integrations/rails.rb#43
  def pre_rails_6_1?; end
end

# source://packs-rails//lib/packs/rails/integrations/rails.rb#10
Packs::Rails::Integrations::Rails::CONFIG_ROUTES_PATH = T.let(T.unsafe(nil), String)

# source://packs-rails//lib/packs/rails/railtie.rb#5
class Packs::Rails::Railtie < ::Rails::Railtie; end

# source://packs-rails//lib/packs/rails/stim.rb#5
class Packs::Rails::Stim < ::Module
  # source://packs-rails//lib/packs/rails/stim.rb#9
  sig { params(pack: ::Packs::Pack, namespace: ::Module).void }
  def initialize(pack, namespace); end

  # source://packs-rails//lib/packs/rails/stim.rb#15
  def included(engine); end
end

# source://packs-rails//lib/packs/rails/stim.rb#35
module Packs::Rails::Stim::ClassMethods
  # source://packs-rails//lib/packs/rails/stim.rb#36
  def find_root(_from); end
end
