#!/usr/bin/env ruby
# frozen_string_literal: true

require "pathname"
require "optparse"
require "ostruct"

require_relative '../lib/visualize_packwerk'
require_relative '../lib/options'

options = Options.new

OptionParser.new do |opt|
  opt.on('--no-layers', "Don't show architectural layers") { |o| options.show_layers = false }
  opt.on('--no-dependencies', "Don't show accepted dependencies") { |o| options.show_dependencies = false }
  opt.on('--no-todos', "Don't show package todos") { |o| options.show_todos = false }
  opt.on('--no-privacy', "Don't show privacy enforcement") { |o| options.show_privacy = false }
  opt.on('--no-teams', "Don't show team colors") { |o| options.show_teams = false }

  opt.on('--focus-on=PACKAGE', "Don't show privacy enforcement") { |o| options.show_only_focus_package = o }
  opt.on('--only-edges-to-focus', "If focus is set, this shows only the edges to/from the focus node instead of all edges in the focussed graph. This only has effect when --focus-on is set.") { |o| options.show_only_edges_to_focus_package = true }

  opt.on('--remote-base-url=PACKAGE', "Link package nodes to an URL (affects graphviz SVG generation)") { |o| options.remote_base_url = o }

  opt.on_tail("-h", "--help", "Show this message") do
    puts opt
    exit
  end
end.parse!

puts VisualizePackwerk.package_graph!(
  options, 
  ParsePackwerk::Configuration.fetch.raw, 
  Packs.all.map { |pack| ParsePackwerk.find(pack.name) }
)
