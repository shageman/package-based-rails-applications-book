# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `code_manifest` gem.
# Please instead update this file by running `bin/tapioca gem code_manifest`.

# source://code_manifest//lib/code_manifest/version.rb#3
module CodeManifest
  class << self
    # source://code_manifest//lib/code_manifest.rb#15
    def [](name); end

    # source://code_manifest//lib/code_manifest.rb#19
    def root(start_path: T.unsafe(nil), reset: T.unsafe(nil)); end

    private

    # source://code_manifest//lib/code_manifest.rb#40
    def find_root(path); end

    # https://stackoverflow.com/a/71192990
    #
    # source://code_manifest//lib/code_manifest.rb#49
    def load_manifest(file); end

    # source://code_manifest//lib/code_manifest.rb#26
    def manifests; end
  end
end

# source://code_manifest//lib/code_manifest.rb#9
class CodeManifest::Error < ::StandardError; end

# source://code_manifest//lib/code_manifest.rb#12
CodeManifest::KEY_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://code_manifest//lib/code_manifest.rb#11
CodeManifest::MANIFEST_FILE = T.let(T.unsafe(nil), String)

# source://code_manifest//lib/code_manifest/manifest.rb#7
class CodeManifest::Manifest
  # @return [Manifest] a new instance of Manifest
  #
  # source://code_manifest//lib/code_manifest/manifest.rb#12
  def initialize(patterns); end

  # source://code_manifest//lib/code_manifest/manifest.rb#28
  def digest; end

  # source://code_manifest//lib/code_manifest/manifest.rb#18
  def files; end

  # source://code_manifest//lib/code_manifest/manifest.rb#35
  def matches(paths); end

  # Returns the value of attribute rules.
  #
  # source://code_manifest//lib/code_manifest/manifest.rb#10
  def rules; end

  private

  # source://code_manifest//lib/code_manifest/manifest.rb#52
  def exclusion_rules; end

  # source://code_manifest//lib/code_manifest/manifest.rb#56
  def files_with_relative_path(files); end

  # source://code_manifest//lib/code_manifest/manifest.rb#48
  def inclusion_rules; end
end

# source://code_manifest//lib/code_manifest/manifest.rb#8
CodeManifest::Manifest::GLOB_OPTIONS = T.let(T.unsafe(nil), Integer)

# source://code_manifest//lib/code_manifest/rule.rb#4
class CodeManifest::Rule
  # @return [Rule] a new instance of Rule
  #
  # source://code_manifest//lib/code_manifest/rule.rb#7
  def initialize(pattern); end

  # Returns the value of attribute exclude.
  #
  # source://code_manifest//lib/code_manifest/rule.rb#5
  def exclude; end

  # Returns the value of attribute glob.
  #
  # source://code_manifest//lib/code_manifest/rule.rb#5
  def glob; end

  # @return [Boolean]
  #
  # source://code_manifest//lib/code_manifest/rule.rb#23
  def match?(file); end
end

# source://code_manifest//lib/code_manifest/version.rb#4
CodeManifest::VERSION = T.let(T.unsafe(nil), String)
